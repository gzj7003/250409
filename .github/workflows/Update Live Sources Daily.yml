name: Update Live Sources Daily

on:
  schedule:
    - cron: '03 3,9,15,21 * * *'  # 修正后的北京时间执行时间（UTC时间减8小时）
  workflow_dispatch:

jobs:
  update-sources:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # 允许推送修改

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 获取完整提交历史

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install requests

      - name: Run Python script to update live sources
        run: |
          cat << 'EOF' > update_live_sources.py
          import requests
          import os
          from pathlib import Path

          def generate_live_source():
              original_urls = [
                  "https://raw.githubusercontent.com/zhuxinfu88/tvlist/main/txt_files/Susa.txt",
                  "https://raw.githubusercontent.com/zhuxinfu88/tvlist/main/txt_files/Susaw.txt"
              ]

              template_channels = [
                  "CCTV1", "CCTV2", "CCTV3", "CCTV4", "CCTV5", "CCTV6", "CCTV7", "CCTV8",
                  "CCTV9", "CCTV10", "CCTV11", "CCTV12", "CCTV13", "CCTV14", "CCTV15",
                  "湖南卫视", "浙江卫视", "东方卫视", "北京卫视", "江苏卫视", "兵团卫视"
              ]

              suzhou_sources = [
                  "苏州新闻综合,https://live-auth.51kandianshi.com/szgd/csztv1.m3u8$江苏苏州地方",
                  "苏州社会经济,https://live-auth.51kandianshi.com/szgd/csztv2.m3u8$江苏苏州地方",
                  "苏州文化生活,https://live-auth.51kandianshi.com/szgd/csztv3.m3u8$江苏苏州地方",
                  "苏州生活资讯,https://live-auth.51kandianshi.com/szgd/csztv5.m3u8$江苏苏州地方",
                  "苏州4K,https://live-auth.51kandianshi.com/szgd/csztv4k_hd.m3u8$江苏苏州地方"
              ]

              try:
                  # 创建目录
                  output_dir = Path("txt_files")
                  output_dir.mkdir(exist_ok=True)

                  # 合并源内容
                  combined_content = []
                  for url in original_urls:
                      response = requests.get(url)
                      response.raise_for_status()
                      combined_content.extend(response.text.strip().split('\n'))

                  # 添加苏州台并过滤频道
                  filtered_content = []
                  seen_channels = set()
                  
                  for line in combined_content + suzhou_sources:
                      if not line.strip():
                          continue
                      name_part = line.split(',', 1)[0]
                      
                      # 频道过滤逻辑
                      if any(channel in name_part for channel in template_channels) \
                         or "苏州" in name_part:
                          if name_part not in seen_channels:
                              seen_channels.add(name_part)
                              filtered_content.append(line)

                  # 保存文本文件
                  txt_path = output_dir / "Susaw-sa.txt"
                  with open(txt_path, 'w', encoding='utf-8') as f:
                      f.write('\n'.join(filtered_content))

                  # 生成M3U文件
                  m3u_content = ["#EXTM3U"]
                  for line in filtered_content:
                      if ',' in line:
                          name, url_part = line.split(',', 1)
                          m3u_content.append(f"#EXTINF:-1,{name}")
                          m3u_content.append(url_part.split('$')[0])

                  m3u_path = output_dir / "Susaw-sa.m3u"
                  with open(m3u_path, 'w', encoding='utf-8') as f:
                      f.write('\n'.join(m3u_content))

                  print(f"成功生成文件: {txt_path} 和 {m3u_path}")

              except requests.RequestException as e:
                  print(f"请求错误: {str(e)}")
                  exit(1)
              except Exception as e:
                  print(f"运行时错误: {str(e)}")
                  exit(1)

          if __name__ == "__main__":
              generate_live_source()
          EOF

          python update_live_sources.py

      - name: Commit and push changes
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          
          # 检测变更
          if [ -z "$(git status --porcelain)" ]; then
            echo "没有文件变更，无需提交"
            exit 0
          fi
          
          # 添加所有变更
          git add -A
          git commit -m "Auto-update live sources [skip ci]"
          
          # 使用force-with-lease安全推送
          attempts=0
          until git push --force-with-lease origin HEAD:main; do
            attempts=$((attempts+1))
            if [ $attempts -ge 3 ]; then
              echo "推送失败，超过最大尝试次数"
              exit 1
            fi
            git pull --rebase origin main
            sleep 5
          done
